input {
	file {
		path => "/tmp/kiekerlog/*.dat"
		type => "kiekerlog"
		start_position => "beginning"
		ignore_older => 0
		sincedb_path => "/dev/null"
	}
	file {
		path => "/tmp/kiekerlog/*.map"
		type => "kiekermap"
		start_position => "beginning"
		ignore_older => 0
		sincedb_path => "/dev/null"
	}
}

#filter {
#	mutate {
#		remove_field => [ "host" ]
#	}
#}

filter {
	if [type] == "kiekerlog" {
		grok {
			match => { "message" => "(?<recordtype>\$\d);%{NUMBER:timestamp};(?<methodname>[A-Za-z0-9(). ]+);(?<sessionid>%{NUMBER}|<no-session-id>);%{NUMBER:traceid};%{NUMBER:tin};%{NUMBER:tout};%{HOSTNAME:hostname};%{NUMBER:eoi};%{NUMBER:ess}" }
			add_tag => [ "OperationExecution" ]
		}
	}
}

#filter {
#	mutate {
#		replace => [ "host", "%{hostname}" ]
#	}
#}

output {
	stdout {
		codec => rubydebug
	}

	if [type] == "kiekerlog" {
		file {
			path => "/tmp/outputlog/%{host}/kieker.log"
			codec => line { format => "%{message}"}
		}
	}
	if [type] == "kiekermap" {
		file {
			path => "/tmp/outputlog/%{host}/kieker.map"
			codec => line { format => "%{message}"}
			#gzip => true
		}
	}
}
